generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Profile {
  DEFAULT
  MANAGER
  ADMIN
}

model User {
  id           Int      @id @default(autoincrement())
  name         String
  profile      Profile
  password     String
  cars         Car[]
  creationDate DateTime
  updateDate   DateTime
  version      Int
  createdBy    User?    @relation("UserCreatedBy", fields: [createdById], references: [id])
  createdById  Int?
  updatedBy    User?    @relation("UserUpdatedBy", fields: [updatedById], references: [id])
  updatedById  Int?

  createdUsers User[] @relation("UserCreatedBy")
  createdCars  Car[]  @relation("CarCreatedBy")

  AuditLog AuditLog[]

  Car Car[] @relation("CarUpdatedBy")

  User User[] @relation("UserUpdatedBy")
}

model Car {
  id           Int      @id @default(autoincrement())
  name         String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  isStocked    Boolean  @default(false)
  creationDate DateTime
  updateDate   DateTime
  version      Int

  createdBy   User @relation("CarCreatedBy", fields: [createdById], references: [id])
  createdById Int

  updatedBy   User? @relation("CarUpdatedBy", fields: [updatedById], references: [id])
  updatedById Int?
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  method    String
  model     String
  objectId  Int
  timestamp DateTime
}
